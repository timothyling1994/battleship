{"ast":null,"code":"import playerFactory from \"./playerFactory.js\";\n\nlet gameController = () => {\n  let humanPlayer;\n  let computerPlayer;\n\n  let gameInit = (humanPlayerShipLocs, computerPlayerShipLocs) => {\n    humanPlayer = playerFactory(true, humanPlayerShipLocs); //let computerPlayerShipLocs = getComputerShipLocs();\n\n    computerPlayer = playerFactory(false, computerPlayerShipLocs);\n  };\n\n  let turnController = inputCoords => {\n    if (humanPlayer.myTurn) {\n      const result = humanPlayer.makeMove(inputCoords, computerPlayer.myGameBoard);\n      humanPlayer.myTurn = false;\n      computerPlayer.myTurn = true;\n      return result;\n    } else {\n      const result = computerPlayer.makeMove(inputCoords, humanPlayer.myGameBoard);\n      computerPlayer.myTurn = false;\n      humanPlayer.myTurn = true;\n      return result;\n    }\n  };\n\n  let getComputersMove = () => {\n    let validMove = false;\n    let selectedIndex;\n\n    while (!validMove) {\n      selectedIndex = Math.floor(Math.random() * 100);\n      console.log(\"selectedIndex\" + selectedIndex);\n      let selectedDiv = document.getElementById(selectedIndex);\n\n      if (!selectedDiv.classList.contains(\"clicked\")) {\n        validMove = true;\n      }\n    }\n\n    return selectedIndex;\n  };\n  /*let getComputerShipLocs = () => {\n  \t\tlet selectedSpots = [];\n  \tlet currentCarrierLength = 5;\n  \t\twhile(currentCarrierLength>0)\n  \t{\n  \t\tlet randomIndex = Math.floor(Math.random()*100);\n  \t\tlet randomRowColumn = Math.floor(Math.random()*2);\n  \t\t}\n  };*/\n\n\n  return {\n    gameInit,\n    turnController,\n    getComputersMove\n  };\n};\n\nexport default gameController;","map":{"version":3,"sources":["/Users/timothyling/Desktop/OdinProject/battleship/battleship/src/gameController.js"],"names":["playerFactory","gameController","humanPlayer","computerPlayer","gameInit","humanPlayerShipLocs","computerPlayerShipLocs","turnController","inputCoords","myTurn","result","makeMove","myGameBoard","getComputersMove","validMove","selectedIndex","Math","floor","random","console","log","selectedDiv","document","getElementById","classList","contains"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;;AAEA,IAAIC,cAAc,GAAG,MAAM;AAE1B,MAAIC,WAAJ;AACA,MAAIC,cAAJ;;AAEA,MAAIC,QAAQ,GAAG,CAACC,mBAAD,EAAqBC,sBAArB,KAAgD;AAE9DJ,IAAAA,WAAW,GAAGF,aAAa,CAAC,IAAD,EAAMK,mBAAN,CAA3B,CAF8D,CAI9D;;AACAF,IAAAA,cAAc,GAAGH,aAAa,CAAC,KAAD,EAAOM,sBAAP,CAA9B;AACA,GAND;;AAQA,MAAIC,cAAc,GAAIC,WAAD,IAAiB;AACrC,QAAGN,WAAW,CAACO,MAAf,EACA;AACC,YAAMC,MAAM,GAAGR,WAAW,CAACS,QAAZ,CAAqBH,WAArB,EAAiCL,cAAc,CAACS,WAAhD,CAAf;AACAV,MAAAA,WAAW,CAACO,MAAZ,GAAqB,KAArB;AACAN,MAAAA,cAAc,CAACM,MAAf,GAAwB,IAAxB;AACA,aAAOC,MAAP;AACA,KAND,MAQA;AACC,YAAMA,MAAM,GAAGP,cAAc,CAACQ,QAAf,CAAwBH,WAAxB,EAAoCN,WAAW,CAACU,WAAhD,CAAf;AACAT,MAAAA,cAAc,CAACM,MAAf,GAAwB,KAAxB;AACAP,MAAAA,WAAW,CAACO,MAAZ,GAAqB,IAArB;AACA,aAAOC,MAAP;AACA;AACD,GAfD;;AAiBA,MAAIG,gBAAgB,GAAG,MAAM;AAC5B,QAAIC,SAAS,GAAG,KAAhB;AACA,QAAIC,aAAJ;;AAEA,WAAM,CAACD,SAAP,EACA;AACCC,MAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBL,aAA5B;AACA,UAAIM,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwBR,aAAxB,CAAlB;;AACA,UAAG,CAACM,WAAW,CAACG,SAAZ,CAAsBC,QAAtB,CAA+B,SAA/B,CAAJ,EACA;AACCX,QAAAA,SAAS,GAAG,IAAZ;AACA;AACD;;AAED,WAAOC,aAAP;AAEA,GAjBD;AAmBA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKC,SAAO;AAACX,IAAAA,QAAD;AAAUG,IAAAA,cAAV;AAAyBM,IAAAA;AAAzB,GAAP;AACA,CA/DD;;AAiEA,eAAeZ,cAAf","sourcesContent":["import playerFactory from \"./playerFactory.js\";\n\nlet gameController = () => { \n\n\tlet humanPlayer;\n\tlet computerPlayer;\n\n\tlet gameInit = (humanPlayerShipLocs,computerPlayerShipLocs) => {\n\n\t\thumanPlayer = playerFactory(true,humanPlayerShipLocs);\n\n\t\t//let computerPlayerShipLocs = getComputerShipLocs();\n\t\tcomputerPlayer = playerFactory(false,computerPlayerShipLocs);\n\t}\n\n\tlet turnController = (inputCoords) => {\n\t\tif(humanPlayer.myTurn)\n\t\t{\n\t\t\tconst result = humanPlayer.makeMove(inputCoords,computerPlayer.myGameBoard);\n\t\t\thumanPlayer.myTurn = false;\n\t\t\tcomputerPlayer.myTurn = true;\n\t\t\treturn result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst result = computerPlayer.makeMove(inputCoords,humanPlayer.myGameBoard);\n\t\t\tcomputerPlayer.myTurn = false;\n\t\t\thumanPlayer.myTurn = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tlet getComputersMove = () => {\n\t\tlet validMove = false;\n\t\tlet selectedIndex;\n\n\t\twhile(!validMove)\n\t\t{\n\t\t\tselectedIndex = Math.floor(Math.random()*100);\n\t\t\tconsole.log(\"selectedIndex\"+selectedIndex);\n\t\t\tlet selectedDiv = document.getElementById(selectedIndex);\n\t\t\tif(!selectedDiv.classList.contains(\"clicked\"))\n\t\t\t{\n\t\t\t\tvalidMove = true;\n\t\t\t}\n\t\t}\n\n\t\treturn selectedIndex;\n\n\t};\n\n\t/*let getComputerShipLocs = () => {\n\n\t\tlet selectedSpots = [];\n\t\tlet currentCarrierLength = 5;\n\n\t\twhile(currentCarrierLength>0)\n\t\t{\n\t\t\tlet randomIndex = Math.floor(Math.random()*100);\n\t\t\tlet randomRowColumn = Math.floor(Math.random()*2);\n\n\t\t}\n\t};*/\n\n\treturn {gameInit,turnController,getComputersMove};\n};\n\nexport default gameController;"]},"metadata":{},"sourceType":"module"}