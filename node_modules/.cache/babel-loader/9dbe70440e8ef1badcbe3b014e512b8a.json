{"ast":null,"code":"import playerFactory from \"./playerFactory.js\";\n\nlet gameController = () => {\n  let humanPlayer;\n  let computerPlayer;\n\n  let gameInit = humanPlayerShipLocs => {\n    humanPlayer = playerFactory(true, humanPlayerShipLocs);\n    let computerPlayerShipLocs = getComputerShipLocs(); //computerPlayer = playerFactory(false,computerPlayerShipLocs);\n  };\n\n  let turnController = inputCoords => {\n    if (humanPlayer.myTurn) {\n      const result = humanPlayer.makeMove(inputCoords, computerPlayer.myGameBoard);\n      humanPlayer.myTurn = false;\n      computerPlayer.myTurn = true;\n      return result;\n    } else {\n      const result = computerPlayer.makeMove(inputCoords, humanPlayer.myGameBoard);\n      computerPlayer.myTurn = false;\n      humanPlayer.myTurn = true;\n      return result;\n    }\n  };\n\n  let getComputerShipLocs = () => {\n    //let finishedPlacingShips = false;\n    let selectedSpots = [];\n    let currentCarrierLength = 5;\n\n    while (currentCarrierLength > 0) {\n      let randomIndex = Math.floor(Math.random() * 100);\n      let selectedRow;\n    }\n  };\n\n  return {\n    gameInit,\n    turnController\n  };\n};\n\nexport default gameController;","map":{"version":3,"sources":["/Users/timothyling/Desktop/OdinProject/battleship/battleship/src/gameController.js"],"names":["playerFactory","gameController","humanPlayer","computerPlayer","gameInit","humanPlayerShipLocs","computerPlayerShipLocs","getComputerShipLocs","turnController","inputCoords","myTurn","result","makeMove","myGameBoard","selectedSpots","currentCarrierLength","randomIndex","Math","floor","random","selectedRow"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;;AAEA,IAAIC,cAAc,GAAG,MAAM;AAE1B,MAAIC,WAAJ;AACA,MAAIC,cAAJ;;AAEA,MAAIC,QAAQ,GAAIC,mBAAD,IAAyB;AAEvCH,IAAAA,WAAW,GAAGF,aAAa,CAAC,IAAD,EAAMK,mBAAN,CAA3B;AAEA,QAAIC,sBAAsB,GAAGC,mBAAmB,EAAhD,CAJuC,CAKvC;AACA,GAND;;AAQA,MAAIC,cAAc,GAAIC,WAAD,IAAiB;AACrC,QAAGP,WAAW,CAACQ,MAAf,EACA;AACC,YAAMC,MAAM,GAAGT,WAAW,CAACU,QAAZ,CAAqBH,WAArB,EAAiCN,cAAc,CAACU,WAAhD,CAAf;AACAX,MAAAA,WAAW,CAACQ,MAAZ,GAAqB,KAArB;AACAP,MAAAA,cAAc,CAACO,MAAf,GAAwB,IAAxB;AACA,aAAOC,MAAP;AACA,KAND,MAQA;AACC,YAAMA,MAAM,GAAGR,cAAc,CAACS,QAAf,CAAwBH,WAAxB,EAAoCP,WAAW,CAACW,WAAhD,CAAf;AACAV,MAAAA,cAAc,CAACO,MAAf,GAAwB,KAAxB;AACAR,MAAAA,WAAW,CAACQ,MAAZ,GAAqB,IAArB;AACA,aAAOC,MAAP;AACA;AACD,GAfD;;AAiBA,MAAIJ,mBAAmB,GAAG,MAAM;AAE/B;AACA,QAAIO,aAAa,GAAG,EAApB;AACA,QAAIC,oBAAoB,GAAG,CAA3B;;AAEA,WAAMA,oBAAoB,GAAC,CAA3B,EACA;AACC,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAlB;AACA,UAAIC,WAAJ;AACA;AACD,GAXD;;AAaA,SAAO;AAAChB,IAAAA,QAAD;AAAUI,IAAAA;AAAV,GAAP;AACA,CA5CD;;AA8CA,eAAeP,cAAf","sourcesContent":["import playerFactory from \"./playerFactory.js\";\n\nlet gameController = () => { \n\n\tlet humanPlayer;\n\tlet computerPlayer;\n\n\tlet gameInit = (humanPlayerShipLocs) => {\n\n\t\thumanPlayer = playerFactory(true,humanPlayerShipLocs);\n\n\t\tlet computerPlayerShipLocs = getComputerShipLocs();\n\t\t//computerPlayer = playerFactory(false,computerPlayerShipLocs);\n\t}\n\n\tlet turnController = (inputCoords) => {\n\t\tif(humanPlayer.myTurn)\n\t\t{\n\t\t\tconst result = humanPlayer.makeMove(inputCoords,computerPlayer.myGameBoard);\n\t\t\thumanPlayer.myTurn = false;\n\t\t\tcomputerPlayer.myTurn = true;\n\t\t\treturn result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst result = computerPlayer.makeMove(inputCoords,humanPlayer.myGameBoard);\n\t\t\tcomputerPlayer.myTurn = false;\n\t\t\thumanPlayer.myTurn = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tlet getComputerShipLocs = () => {\n\n\t\t//let finishedPlacingShips = false;\n\t\tlet selectedSpots = [];\n\t\tlet currentCarrierLength = 5;\n\n\t\twhile(currentCarrierLength>0)\n\t\t{\n\t\t\tlet randomIndex = Math.floor(Math.random()*100);\n\t\t\tlet selectedRow\n\t\t}\n\t};\n\n\treturn {gameInit,turnController};\n};\n\nexport default gameController;"]},"metadata":{},"sourceType":"module"}