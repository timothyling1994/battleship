{"ast":null,"code":"var _jsxFileName = \"/Users/timothyling/Desktop/OdinProject/battleship/battleship/src/components/GamePage.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport gameController from \"../gameController.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GamePage(props) {\n  const GRID_DIMENSION = 10;\n  let playerOneGrid = [];\n  let playerTwoGrid = [];\n  let currentGameController;\n  let playerOneBoard = props.storeShipLocs;\n  const playerOneBoardFlattened = playerOneBoard.flat(2).sort(function (a, b) {\n    return a - b;\n  });\n  let tempEnemyBoard = [[0], [1, 2], [3, 4, 5], [10, 11, 12, 13], [14, 15, 16, 17, 18]];\n\n  const initGameController = () => {\n    currentGameController = gameController();\n    currentGameController.gameInit(props.storeShipLocs, tempEnemyBoard);\n  };\n\n  const initGameBoards = () => {\n    for (let i = 0; i < GRID_DIMENSION * GRID_DIMENSION; i++) {\n      playerTwoGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-element\",\n        id: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 23\n      }, this));\n\n      if (playerOneBoardFlattened.includes(i)) {\n        playerOneGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-element highlight\",\n          id: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this));\n      } else {\n        playerOneGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-element\",\n          id: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this));\n      }\n    }\n  };\n\n  const renderGameBoards = () => {};\n\n  initGameController();\n  initGameBoards();\n  console.log(playerOneBoardFlattened);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-status\",\n      children: [props.name, \", Awaiting Coordinates Captain\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameboards-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-gameboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-one-label\",\n          children: \"Player One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), playerOneGrid.map(gridelement => gridelement)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-gameboard\",\n        children: playerTwoGrid.map(gridelement => gridelement)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_c = GamePage;\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["/Users/timothyling/Desktop/OdinProject/battleship/battleship/src/components/GamePage.js"],"names":["React","useState","gameController","GamePage","props","GRID_DIMENSION","playerOneGrid","playerTwoGrid","currentGameController","playerOneBoard","storeShipLocs","playerOneBoardFlattened","flat","sort","a","b","tempEnemyBoard","initGameController","gameInit","initGameBoards","i","push","includes","renderGameBoards","console","log","name","map","gridelement"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useState} from \"react\";\nimport gameController from \"../gameController.js\";\n\nfunction GamePage(props){\n\n\tconst GRID_DIMENSION = 10;\n\tlet playerOneGrid = [];\n\tlet playerTwoGrid = [];\n\tlet currentGameController;\n\tlet playerOneBoard = props.storeShipLocs;\n\tconst playerOneBoardFlattened = playerOneBoard.flat(2).sort(function (a,b){\n\t\treturn a-b;\n\t});\n\tlet tempEnemyBoard = [[0],[1,2],[3,4,5],[10,11,12,13],[14,15,16,17,18]];\n\n\tconst initGameController = () => {\n\t\tcurrentGameController = gameController();\n\t\tcurrentGameController.gameInit(props.storeShipLocs,tempEnemyBoard);\n\t};\n\n\tconst initGameBoards = () =>{\n\t\n\t\tfor(let i = 0;i <GRID_DIMENSION*GRID_DIMENSION;i++)\n\t\t{\n\t\t\tplayerTwoGrid.push(<div className=\"grid-element\" id={i}></div>);\n\t\n\t\t\tif(playerOneBoardFlattened.includes(i))\n\t\t\t{\n\t\t\t\tplayerOneGrid.push(<div className=\"grid-element highlight\" id={i}></div>);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tplayerOneGrid.push(<div className=\"grid-element\" id={i}></div>);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst renderGameBoards = () => {\n\n\t};\n\n\tinitGameController();\n\tinitGameBoards();\n\n\tconsole.log(playerOneBoardFlattened);\n\t\n\t\n\treturn(\n\t\t<div className=\"game-page\">\n\t\t\t<div className=\"game-status\">{props.name}, Awaiting Coordinates Captain</div>\n\t\t\t<div className=\"gameboards-container\">\n\t\t\t\t<div className=\"main-gameboard\">\n\t\t\t\t\t<div className=\"player-one-label\">Player One</div>\n\t\t\t\t\t{playerOneGrid.map((gridelement)=>gridelement)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"main-gameboard\">\n\t\t\t\t\t{playerTwoGrid.map((gridelement)=>gridelement)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}